priority -50

snippet cls "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`}
{
public:
	$1 () = default;
	~$1 () = default;

	$1 (${2:arguments});

	bool operator== (const $1& that);
	bool operator< (const $1& that);
};
endsnippet

snippet ptr "define smart ptr"
using Ptr = std::shared_ptr<${1:classname`}>;
using WPtr = std::weak_ptr<${1:classname`}>;
endsnippet
